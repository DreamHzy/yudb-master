<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ynzyq.yudbadmin.dao.system.SystemMenuMapper">

    <resultMap id="BaseResultMap" type="com.ynzyq.yudbadmin.dao.system.model.SystemMenu">
        <id column="ID" jdbcType="INTEGER" property="id"/>
        <result column="PARENT_ID" jdbcType="INTEGER" property="parentId"/>
        <result column="NAME" jdbcType="VARCHAR" property="name"/>
        <result column="PATH" jdbcType="VARCHAR" property="path"/>
        <result column="REMARK" jdbcType="VARCHAR" property="remark"/>
        <result column="ICON" jdbcType="VARCHAR" property="icon"/>
        <result column="DISABLED" jdbcType="BIT" property="disabled"/>
        <result column="SORT" jdbcType="INTEGER" property="sort"/>
        <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="CREATE_USER" jdbcType="INTEGER" property="createUser"/>
        <result column="IS_SYSTEM" jdbcType="INTEGER" property="isSystem"/>
        <result column="UPDATE_USER" jdbcType="INTEGER" property="updateUser"/>
        <result column="DELETED" jdbcType="BIT" property="deleted"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        `ID`
        , `PARENT_ID`, `NAME`, `PATH`, `REMARK`, `ICON`, `DISABLED`, `SORT`, `CREATE_TIME`, `UPDATE_TIME`, `CREATE_USER`, `UPDATE_USER`, `DELETED`,IS_SYSTEM
    </sql>

    <!-- 查询菜单列表 -->
    <resultMap id="SystemMenuListVO" type="com.ynzyq.yudbadmin.dao.system.vo.SystemMenuListVO" autoMapping="true">
        <id column="ID" property="id"/>
        <association property="createUserInfo" javaType="com.ynzyq.yudbadmin.dao.system.model.SystemUser">
            <result column="CREATE_USER_ID" property="id"/>
            <result column="CREATE_USER_NAME" property="username"/>
        </association>
        <association property="updateUserInfo" javaType="com.ynzyq.yudbadmin.dao.system.model.SystemUser">
            <result column="UPDATE_USER_ID" property="id"/>
            <result column="UPDATE_USER_NAME" property="username"/>
        </association>
    </resultMap>
    <select id="selectList" resultMap="SystemMenuListVO">
        SELECT menu.`ID`,
               menu.`PARENT_ID`,
               menu.`NAME`,
               menu.`PATH`,
               menu.`REMARK`,
               menu.`DISABLED`,
               menu.SORT,
               menu.`ICON`,
               menu.`CREATE_TIME`,
               menu.`UPDATE_TIME`,
               menu.`CREATE_USER`,
               menu.`UPDATE_USER`,
               menu.IS_SYSTEM,
               menu.`DELETED`,
               create_user.ID         CREATE_USER_ID,
               create_user.`USERNAME` CREATE_USER_NAME,
               update_user.ID         UPDETE_USER_ID,
               update_user.`USERNAME` UPDATE_USER_NAME
        FROM SYSTEM_MENU menu
                 LEFT JOIN `SYSTEM_USER` create_user ON create_user.ID = menu.CREATE_USER
                 LEFT JOIN `SYSTEM_USER` update_user ON update_user.ID = menu.UPDATE_USER
        ORDER BY menu.SORT
    </select>

  <!-- 查询菜单树 -->
  <select id="selectByUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT
      DISTINCT menu.`ID`, menu.`PARENT_ID`, menu.`NAME`, menu.`PATH`, menu.`REMARK`, menu.`DISABLED`, menu.SORT, menu.`ICON`, menu.`CREATE_TIME`, menu.`UPDATE_TIME`, menu.`CREATE_USER`, menu.`UPDATE_USER`, menu.`DELETED`, menu.`IS_SYSTEM`
    FROM `SYSTEM_MENU` menu
    INNER JOIN SYSTEM_ROLE_MENU role_menu ON role_menu.MENU_ID = menu.ID AND role_menu.DELETED = 0
    INNER JOIN SYSTEM_USER_ROLE user_role ON user_role.ROLE_ID = role_menu.ROLE_ID AND user_role.DELETED = 0
    <where>
      AND menu.DELETED = 0
      AND menu.DISABLED = 0
      AND user_role.USER_ID = #{userId}
    </where>
    ORDER BY menu.SORT
  </select>

  <!-- 根据角色ID查询菜单列表 -->
  <select id="selectByRoleId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT
      menu.`ID`, menu.`PARENT_ID`, menu.`NAME`, menu.`PATH`, menu.`REMARK`, menu.`DISABLED`, menu.SORT, menu.`ICON`, menu.`CREATE_TIME`, menu.`UPDATE_TIME`, menu.`CREATE_USER`, menu.`UPDATE_USER`, menu.`DELETED`
    FROM `SYSTEM_MENU` menu
    INNER JOIN `SYSTEM_ROLE_MENU` role_menu ON role_menu.MENU_ID = menu.ID AND role_menu.DELETED = 0
    <where>
      menu.DELETED = 0
      AND role_menu.ROLE_ID = #{roleId}
    </where>
  </select>

  <select id="selectByExample" parameterType="com.ynzyq.yudbadmin.dao.system.model.SystemMenuExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List"/>
    from `SYSTEM_MENU`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from `SYSTEM_MENU`
    where `ID` = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from `SYSTEM_MENU`
    where `ID` = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ynzyq.yudbadmin.dao.system.model.SystemMenuExample">
    delete from `SYSTEM_MENU`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </delete>
  <insert id="insert" parameterType="com.ynzyq.yudbadmin.dao.system.model.SystemMenu">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `SYSTEM_MENU` (
      `PARENT_ID`, 
      `NAME`, 
      `PATH`, 
      `REMARK`, 
      `ICON`, 
      `DISABLED`, 
      `SORT`, 
      `CREATE_TIME`, 
      `UPDATE_TIME`, 
      `CREATE_USER`, 
      `UPDATE_USER`, 
      `DELETED`
    )
    values (
      #{parentId,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, 
      #{path,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, 
      #{icon,jdbcType=VARCHAR}, 
      #{disabled,jdbcType=BIT}, 
      #{sort,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=INTEGER}, 
      #{updateUser,jdbcType=INTEGER}, 
      #{deleted,jdbcType=BIT}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.ynzyq.yudbadmin.dao.system.model.SystemMenu">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `SYSTEM_MENU`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="parentId != null">
      `PARENT_ID`,
      </if>
      <if test="name != null">
      `NAME`,
      </if>
      <if test="path != null">
      `PATH`,
      </if>
      <if test="remark != null">
      `REMARK`,
      </if>
      <if test="icon != null">
      `ICON`,
      </if>
      <if test="disabled != null">
      `DISABLED`,
      </if>
      <if test="sort != null">
      `SORT`,
      </if>
      <if test="createTime != null">
      `CREATE_TIME`,
      </if>
      <if test="updateTime != null">
      `UPDATE_TIME`,
      </if>
      <if test="createUser != null">
      `CREATE_USER`,
      </if>
      <if test="updateUser != null">
      `UPDATE_USER`,
      </if>
      <if test="deleted != null">
      `DELETED`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="parentId != null">
      #{parentId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
      #{name,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
      #{path,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
      #{remark,jdbcType=VARCHAR},
      </if>
      <if test="icon != null">
      #{icon,jdbcType=VARCHAR},
      </if>
      <if test="disabled != null">
      #{disabled,jdbcType=BIT},
      </if>
      <if test="sort != null">
      #{sort,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
      #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
      #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
      #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateUser != null">
      #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="deleted != null">
      #{deleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ynzyq.yudbadmin.dao.system.model.SystemMenuExample" resultType="java.lang.Integer">
    select count(*) from `SYSTEM_MENU`
    <if test="_parameter != null">
    <include refid="Example_Where_Clause"/>
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update `SYSTEM_MENU`
    <set>
      <if test="record.parentId != null">
      `PARENT_ID` = #{record.parentId,jdbcType=INTEGER}, 
      </if>
      <if test="record.name != null">
      `NAME` = #{record.name,jdbcType=VARCHAR}, 
      </if>
      <if test="record.path != null">
      `PATH` = #{record.path,jdbcType=VARCHAR}, 
      </if>
      <if test="record.remark != null">
      `REMARK` = #{record.remark,jdbcType=VARCHAR}, 
      </if>
      <if test="record.icon != null">
      `ICON` = #{record.icon,jdbcType=VARCHAR}, 
      </if>
      <if test="record.disabled != null">
      `DISABLED` = #{record.disabled,jdbcType=BIT}, 
      </if>
      <if test="record.sort != null">
      `SORT` = #{record.sort,jdbcType=INTEGER}, 
      </if>
      <if test="record.createTime != null">
      `CREATE_TIME` = #{record.createTime,jdbcType=TIMESTAMP}, 
      </if>
      <if test="record.updateTime != null">
      `UPDATE_TIME` = #{record.updateTime,jdbcType=TIMESTAMP}, 
      </if>
      <if test="record.createUser != null">
      `CREATE_USER` = #{record.createUser,jdbcType=INTEGER}, 
      </if>
      <if test="record.updateUser != null">
      `UPDATE_USER` = #{record.updateUser,jdbcType=INTEGER}, 
      </if>
      <if test="record.deleted != null">
      `DELETED` = #{record.deleted,jdbcType=BIT}
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update `SYSTEM_MENU`
    <set>
      `PARENT_ID` = #{record.parentId,jdbcType=INTEGER}, 
      `NAME` = #{record.name,jdbcType=VARCHAR}, 
      `PATH` = #{record.path,jdbcType=VARCHAR}, 
      `REMARK` = #{record.remark,jdbcType=VARCHAR}, 
      `ICON` = #{record.icon,jdbcType=VARCHAR}, 
      `DISABLED` = #{record.disabled,jdbcType=BIT}, 
      `SORT` = #{record.sort,jdbcType=INTEGER}, 
      `CREATE_TIME` = #{record.createTime,jdbcType=TIMESTAMP}, 
      `UPDATE_TIME` = #{record.updateTime,jdbcType=TIMESTAMP}, 
      `CREATE_USER` = #{record.createUser,jdbcType=INTEGER}, 
      `UPDATE_USER` = #{record.updateUser,jdbcType=INTEGER}, 
      `DELETED` = #{record.deleted,jdbcType=BIT}
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ynzyq.yudbadmin.dao.system.model.SystemMenu">
    update `SYSTEM_MENU`
    <set>
      <if test="parentId != null">
      `PARENT_ID` = #{parentId,jdbcType=INTEGER}, 
      </if>
      <if test="name != null">
      `NAME` = #{name,jdbcType=VARCHAR}, 
      </if>
      <if test="path != null">
      `PATH` = #{path,jdbcType=VARCHAR}, 
      </if>
      <if test="remark != null">
      `REMARK` = #{remark,jdbcType=VARCHAR}, 
      </if>
      <if test="icon != null">
      `ICON` = #{icon,jdbcType=VARCHAR}, 
      </if>
      <if test="disabled != null">
      `DISABLED` = #{disabled,jdbcType=BIT}, 
      </if>
      <if test="sort != null">
      `SORT` = #{sort,jdbcType=INTEGER}, 
      </if>
      <if test="createTime != null">
      `CREATE_TIME` = #{createTime,jdbcType=TIMESTAMP}, 
      </if>
      <if test="updateTime != null">
      `UPDATE_TIME` = #{updateTime,jdbcType=TIMESTAMP}, 
      </if>
      <if test="createUser != null">
      `CREATE_USER` = #{createUser,jdbcType=INTEGER}, 
      </if>
      <if test="updateUser != null">
      `UPDATE_USER` = #{updateUser,jdbcType=INTEGER}, 
      </if>
      <if test="deleted != null">
      `DELETED` = #{deleted,jdbcType=BIT}
      </if>
    </set>
    where `ID` = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ynzyq.yudbadmin.dao.system.model.SystemMenu">
    update `SYSTEM_MENU`
    <set>
      `PARENT_ID` = #{parentId,jdbcType=INTEGER}, 
      `NAME` = #{name,jdbcType=VARCHAR}, 
      `PATH` = #{path,jdbcType=VARCHAR}, 
      `REMARK` = #{remark,jdbcType=VARCHAR}, 
      `ICON` = #{icon,jdbcType=VARCHAR}, 
      `DISABLED` = #{disabled,jdbcType=BIT}, 
      `SORT` = #{sort,jdbcType=INTEGER}, 
      `CREATE_TIME` = #{createTime,jdbcType=TIMESTAMP}, 
      `UPDATE_TIME` = #{updateTime,jdbcType=TIMESTAMP}, 
      `CREATE_USER` = #{createUser,jdbcType=INTEGER}, 
      `UPDATE_USER` = #{updateUser,jdbcType=INTEGER}, 
      `DELETED` = #{deleted,jdbcType=BIT}
    </set>
    where `ID` = #{id,jdbcType=INTEGER}
  </update>
</mapper>