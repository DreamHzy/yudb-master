<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ynzyq.yudbadmin.dao.system.SystemLogMapper">
    <resultMap id="BaseResultMap" type="com.ynzyq.yudbadmin.dao.system.model.SystemLog">
        <id column="ID" property="id" jdbcType="INTEGER"/>
        <result column="URL" property="url" jdbcType="VARCHAR"/>
        <result column="PARAMETER" property="parameter" jdbcType="VARCHAR"/>
        <result column="DESCRIPTION" property="description" jdbcType="VARCHAR"/>
        <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="CREATE_USER" property="createUser" jdbcType="INTEGER"/>
        <result column="IP" property="ip" jdbcType="VARCHAR"/>
        <result column="OPERTE_RESULT" property="operteResult" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        ID
        , URL, PARAMETER, DESCRIPTION, CREATE_TIME, UPDATE_TIME, CREATE_USER, IP, OPERTE_RESULT
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ynzyq.yudbadmin.dao.system.model.SystemLogExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from system_log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from system_log
        where ID = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from system_log
        where ID = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.ynzyq.yudbadmin.dao.system.model.SystemLogExample">
        delete from system_log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.ynzyq.yudbadmin.dao.system.model.SystemLog">
        <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into system_log (URL, PARAMETER, DESCRIPTION,
        CREATE_TIME, UPDATE_TIME, CREATE_USER,
        IP, OPERTE_RESULT)
        values (#{url,jdbcType=VARCHAR}, #{parameter,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},
        #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=INTEGER},
        #{ip,jdbcType=VARCHAR}, #{operteResult,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.ynzyq.yudbadmin.dao.system.model.SystemLog">
        <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into system_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="url != null">
                URL,
            </if>
            <if test="parameter != null">
                PARAMETER,
            </if>
            <if test="description != null">
                DESCRIPTION,
            </if>
            <if test="createTime != null">
                CREATE_TIME,
            </if>
            <if test="updateTime != null">
                UPDATE_TIME,
            </if>
            <if test="createUser != null">
                CREATE_USER,
            </if>
            <if test="ip != null">
                IP,
            </if>
            <if test="operteResult != null">
                OPERTE_RESULT,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="url != null">
                #{url,jdbcType=VARCHAR},
            </if>
            <if test="parameter != null">
                #{parameter,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUser != null">
                #{createUser,jdbcType=INTEGER},
            </if>
            <if test="ip != null">
                #{ip,jdbcType=VARCHAR},
            </if>
            <if test="operteResult != null">
                #{operteResult,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.ynzyq.yudbadmin.dao.system.model.SystemLogExample"
            resultType="java.lang.Integer">
        select count(*) from system_log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update system_log
        <set>
            <if test="record.id != null">
                ID = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.url != null">
                URL = #{record.url,jdbcType=VARCHAR},
            </if>
            <if test="record.parameter != null">
                PARAMETER = #{record.parameter,jdbcType=VARCHAR},
            </if>
            <if test="record.description != null">
                DESCRIPTION = #{record.description,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.createUser != null">
                CREATE_USER = #{record.createUser,jdbcType=INTEGER},
            </if>
            <if test="record.ip != null">
                IP = #{record.ip,jdbcType=VARCHAR},
            </if>
            <if test="record.operteResult != null">
                OPERTE_RESULT = #{record.operteResult,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update system_log
        set ID = #{record.id,jdbcType=INTEGER},
        URL = #{record.url,jdbcType=VARCHAR},
        PARAMETER = #{record.parameter,jdbcType=VARCHAR},
        DESCRIPTION = #{record.description,jdbcType=VARCHAR},
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
        CREATE_USER = #{record.createUser,jdbcType=INTEGER},
        IP = #{record.ip,jdbcType=VARCHAR},
        OPERTE_RESULT = #{record.operteResult,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.ynzyq.yudbadmin.dao.system.model.SystemLog">
        update system_log
        <set>
            <if test="url != null">
                URL = #{url,jdbcType=VARCHAR},
            </if>
            <if test="parameter != null">
                PARAMETER = #{parameter,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                DESCRIPTION = #{description,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUser != null">
                CREATE_USER = #{createUser,jdbcType=INTEGER},
            </if>
            <if test="ip != null">
                IP = #{ip,jdbcType=VARCHAR},
            </if>
            <if test="operteResult != null">
                OPERTE_RESULT = #{operteResult,jdbcType=VARCHAR},
            </if>
        </set>
        where ID = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ynzyq.yudbadmin.dao.system.model.SystemLog">
        update system_log
        set URL           = #{url,jdbcType=VARCHAR},
            PARAMETER     = #{parameter,jdbcType=VARCHAR},
            DESCRIPTION   = #{description,jdbcType=VARCHAR},
            CREATE_TIME   = #{createTime,jdbcType=TIMESTAMP},
            UPDATE_TIME   = #{updateTime,jdbcType=TIMESTAMP},
            CREATE_USER   = #{createUser,jdbcType=INTEGER},
            IP            = #{ip,jdbcType=VARCHAR},
            OPERTE_RESULT = #{operteResult,jdbcType=VARCHAR}
        where ID = #{id,jdbcType=INTEGER}
    </update>


    <select id="selectList" resultType="com.ynzyq.yudbadmin.dao.system.vo.SystemLogListVO">
        SELECT su.AVATAR avatar,
        su.USERNAME ,
        sl.PARAMETER ,
        sl.DESCRIPTION ,
        sl.OPERTE_RESULT ,
        sl.URL ,
        sl.CREATE_TIME ,
        sl.IP
        FROM system_log sl
        LEFT JOIN system_user su ON su.ID = sl.CREATE_USER
        <where>
            1=1
            AND su.`USERNAME` LIKE CONCAT('%', #{username}, '%')
            AND su.`MOBILE` LIKE CONCAT('%', #{mobile}, '%')
            ORDER BY CREATE_TIME DESC
        </where>
    </select>
</mapper>